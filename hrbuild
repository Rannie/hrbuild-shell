#!/bin/bash

#--------------------------------------------
# 功能：编译xcode项目并打ipa包
# 使用说明：
#		编译project
#			hrbuild <project directory> -c <project configuration> -o <ipa output directory> [-t <target name>] -p <provisioning profile> [-n]
#		编译workspace
#			hrbuild  <workspace directory> -w -s <schemeName> -c <project configuration> -o <ipa output directory> [-t <target name>] -p <provisioning profile> [-n]
#
# 参数说明：
#           -c NAME				工程的configuration,默认为Release。
#           -o PATH				生成的ipa文件输出的文件夹
#			-t NAME				需要编译的target的名称
#			-w					编译workspace	
#			-s NAME				对应workspace下需要编译的scheme
#			-n					编译前是否先clean工程
#			-p NAME				配置文件
#
#           作者：Hanran Liu


if [ $# -lt 1 ];then
	echo "Error! Should enter the root directory of xcode project after the ipa-build command."
	exit 2
fi

if [ ! -d $1 ];then
	echo "Error! The first param must be a directory."
	exit 2
fi

#工程绝对路径
cd $1
project_path=$(pwd)

#编译的configuration，默认为Release
build_config=Release

param_pattern=":p:nc:o:t:ws:"
OPTIND=2
while getopts $param_pattern optname
  do
    case "$optname" in       
	  "n")        
		should_clean=y		
        ;;
      "p")
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG

		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "Error argument value for option $tmp_optname"
			exit 2
		fi
		OPTIND=$tmp_optind

		provisioning_profile=$tmp_optarg
		
        ;;
      "c")        
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG
		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "Error argument value for option $tmp_optname"
			exit 2
		fi
		OPTIND=$tmp_optind

		build_config=$tmp_optarg
		
        ;;
      "o")
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG

		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "Error argument value for option $tmp_optname"
			exit 2
		fi
		OPTIND=$tmp_optind


		cd $tmp_optarg
		output_path=$(pwd)
		cd ${project_path}

		if [ ! -d $output_path ];then
			echo "Error!The value of option o must be an exist directory."
			exit 2
		fi

        ;;
	  "w")
		workspace_name='*.xcworkspace'
		ls $project_path/$workspace_name &>/dev/null
		rtnValue=$?
		if [ $rtnValue = 0 ];then
			build_workspace=$(echo $(basename $project_path/$workspace_name))
		else
			echo  "Error!Current path is not a xcode workspace.Please check, or do not use -w option."
			exit 2
		fi
		
        ;;
	  "s")
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG

		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "Error argument value for option $tmp_optname"
			exit 2
		fi
		OPTIND=$tmp_optind

		build_scheme=$tmp_optarg
		
        ;;
	  "t")
		tmp_optind=$OPTIND
		tmp_optname=$optname
		tmp_optarg=$OPTARG

		OPTIND=$OPTIND-1
		if getopts $param_pattern optname ;then
			echo  "Error argument value for option $tmp_optname"
			exit 2
		fi
		OPTIND=$tmp_optind

		build_target=$tmp_optarg
		
        ;;


      "?")
        echo "Error! Unknown option $OPTARG"
		exit 2
        ;;
      ":")
        echo "Error! No argument value for option $OPTARG"
		exit 2
        ;;
      *)
      # Should not occur
        echo "Error! Unknown error while processing options"
		exit 2
        ;;
    esac
  done

#是否clean
if [ "$should_clean" = "y" ];then
xcodebuild clean
fi

archive_path=${output_path}/${build_scheme}.xcarchive
#组合归档命令
build_cmd='xcodebuild -archivePath '${archive_path}

if [ "$build_workspace" != "" ];then
	#workspace
	if [ "$build_scheme" = "" ];then
		echo "Error! Must provide a scheme by -s option together when using -w option to compile a workspace."
		exit 2
	fi
	
    build_cmd=${build_cmd}' -workspace '${build_workspace}' -sdk iphoneos -scheme '${build_scheme}' -configuration '${build_config}

	else
	#编译project
	build_cmd=${build_cmd}' -sdk iphoneos -configuration '${build_config}

	if [ "$build_target" != "" ];then
	build_cmd=${build_cmd}' -target '${build_target}
	fi

fi

build_cmd=${build_cmd}' archive'
echo "archive command: ${build_cmd}"

#归档
cd $project_path
$build_cmd || exit

#进入build路径
cd $build_path

#版本号
bundleShortVersion=$(/usr/libexec/PlistBuddy -c "print :ApplicationProperties:CFBundleShortVersionString" ${archive_path}/Info.plist)
#导出IPA路径
export_path=${output_path}/${build_scheme}_${bundleShortVersion}.ipa
#删除同名IPA
rm -rf ${export_path}

#打包IPA
xcodebuild -exportArchive -exportFormat IPA -exportProvisioningProfile ${provisioning_profile} -archivePath ${archive_path} -exportPath ${export_path} || exit

#删除归档文件
rm -rf ${archive_path}

echo "Build ipa successfully to the path ${export_path}"

